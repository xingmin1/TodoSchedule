// Code generated by SynkAdapter plugin. Do not edit this file.
package com.example.todoschedule.data.sync.adapter

import com.example.todoschedule.data.database.entity.CourseEntity
import com.tap.synk.encode.MapEncoder

public class CourseEntityMapEncoder : MapEncoder<CourseEntity> {
    public override fun encode(crdt: CourseEntity): Map<String, String> {
        val map = mutableMapOf<String, String>()
        map["id"] = crdt.id.toString()
        map["tableId"] = crdt.tableId.toString()
        map["courseName"] = crdt.courseName
        map["color"] = crdt.color
        map["room"] = crdt.room.toString()
        map["teacher"] = crdt.teacher.toString()
        map["startWeek"] = crdt.startWeek.toString()
        map["endWeek"] = crdt.endWeek.toString()
        map["credit"] = crdt.credit.toString()
        map["courseCode"] = crdt.courseCode.toString()
        map["syllabusLink"] = crdt.syllabusLink.toString()
        map["crdtKey"] = crdt.crdtKey
        map["tableCrdtKey"] = crdt.tableCrdtKey.toString()
        map["updateTimestamp"] = crdt.updateTimestamp.toString()
        return map
    }

    public override fun decode(map: Map<String, String>): CourseEntity {
        val crdt = CourseEntity(
            map["id"]!!.toInt(),
            map["tableId"]!!.toInt(),
            map["courseName"]!!,
            map["color"]!!,
            map["room"],
            map["teacher"],
            map["startWeek"]!!.toInt(),
            map["endWeek"]!!.toInt(),
            map["credit"]?.toFloat(),
            map["courseCode"],
            map["syllabusLink"],
            map["crdtKey"]!!,
            map["tableCrdtKey"],
            map["updateTimestamp"]?.toLong(),
        )
        return crdt
    }
}
