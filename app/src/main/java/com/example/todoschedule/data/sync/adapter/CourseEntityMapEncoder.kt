// Code generated by SynkAdapter plugin. Do not edit this file.
package com.example.todoschedule.data.sync.adapter

import com.example.todoschedule.data.database.entity.CourseEntity
import com.tap.synk.encode.MapEncoder

public class CourseEntityMapEncoder : MapEncoder<CourseEntity> {
    override fun encode(crdt: CourseEntity): Map<String, String> = buildMap {
        put("id", crdt.id.toString())
        put("tableId", crdt.tableId.toString())
        put("courseName", crdt.courseName)
        put("color", crdt.color)
        put("room", crdt.room.orEmpty())
        put("teacher", crdt.teacher.orEmpty())
        put("startWeek", crdt.startWeek.toString())
        put("endWeek", crdt.endWeek.toString())
        put("credit", crdt.credit?.toString() ?: "")
        put("courseCode", crdt.courseCode.orEmpty())
        put("syllabusLink", crdt.syllabusLink.orEmpty())
    }

    override fun decode(map: Map<String, String>): CourseEntity = CourseEntity(
        id = map.getValue("id").toInt(),
        tableId = map.getValue("tableId").toInt(),
        courseName = map.getValue("courseName"),
        color = map.getValue("color"),
        room = map["room"].takeUnless { it.isNullOrBlank() },
        teacher = map["teacher"].takeUnless { it.isNullOrBlank() },
        startWeek = map.getValue("startWeek").toInt(),
        endWeek = map.getValue("endWeek").toInt(),
        credit = map["credit"].takeUnless { it.isNullOrBlank() }?.toFloatOrNull(),
        courseCode = map["courseCode"].takeUnless { it.isNullOrBlank() },
        syllabusLink = map["syllabusLink"].takeUnless { it.isNullOrBlank() },
    )
}
