// Code generated by SynkAdapter plugin. Do not edit this file.
package com.example.todoschedule.data.sync.adapter

import com.example.todoschedule.data.database.entity.CourseNodeEntity
import com.tap.synk.encode.MapEncoder

public class CourseNodeEntityMapEncoder : MapEncoder<CourseNodeEntity> {
    public override fun encode(crdt: CourseNodeEntity): Map<String, String> {
        val map = mutableMapOf<String, String>()
        map["id"] = crdt.id.toString()
        map["courseId"] = crdt.courseId.toString()
        map["courseNodeName"] = crdt.courseNodeName.toString()
        map["color"] = crdt.color.toString()
        map["room"] = crdt.room.toString()
        map["teacher"] = crdt.teacher.toString()
        map["startNode"] = crdt.startNode.toString()
        map["step"] = crdt.step.toString()
        map["day"] = crdt.day.toString()
        map["startWeek"] = crdt.startWeek.toString()
        map["endWeek"] = crdt.endWeek.toString()
        map["weekType"] = crdt.weekType.toString()
        map["crdtKey"] = crdt.crdtKey
        map["courseCrdtKey"] = crdt.courseCrdtKey.toString()
        map["updateTimestamp"] = crdt.updateTimestamp.toString()
        return map
    }

    public override fun decode(map: Map<String, String>): CourseNodeEntity {
        val crdt = CourseNodeEntity(
            map["id"]!!.toInt(),
            map["courseId"]!!.toInt(),
            map["courseNodeName"],
            map["color"],
            map["room"],
            map["teacher"],
            map["startNode"]!!.toInt(),
            map["step"]!!.toInt(),
            map["day"]!!.toInt(),
            map["startWeek"]!!.toInt(),
            map["endWeek"]!!.toInt(),
            map["weekType"]!!.toInt(),
            map["crdtKey"]!!,
            map["courseCrdtKey"],
            map["updateTimestamp"]?.toLong(),
        )
        return crdt
    }
}
