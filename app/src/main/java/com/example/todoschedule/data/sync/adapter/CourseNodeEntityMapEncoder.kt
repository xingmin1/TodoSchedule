// Code generated by SynkAdapter plugin. Do not edit this file.
package com.example.todoschedule.data.sync.adapter

import com.example.todoschedule.core.extensions.toUuid
import com.example.todoschedule.data.database.entity.CourseNodeEntity
import com.tap.synk.encode.MapEncoder

public class CourseNodeEntityMapEncoder : MapEncoder<CourseNodeEntity> {
    override fun encode(crdt: CourseNodeEntity): Map<String, String> = buildMap {
        put("id", crdt.id.toString())
        put("courseId", crdt.courseId.toString())
        put("courseNodeName", crdt.courseNodeName.orEmpty())
        put("color", crdt.color.orEmpty())
        put("room", crdt.room.orEmpty())
        put("teacher", crdt.teacher.orEmpty())
        put("startNode", crdt.startNode.toString())
        put("step", crdt.step.toString())
        put("day", crdt.day.toString())
        put("startWeek", crdt.startWeek.toString())
        put("endWeek", crdt.endWeek.toString())
        put("weekType", crdt.weekType.toString())
    }

    override fun decode(map: Map<String, String>): CourseNodeEntity = CourseNodeEntity(
        id = map.getValue("id").toUuid(),
        courseId = map.getValue("courseId").toUuid(),
        courseNodeName = map["courseNodeName"].takeUnless { it.isNullOrBlank() },
        color = map["color"].takeUnless { it.isNullOrBlank() },
        room = map["room"].takeUnless { it.isNullOrBlank() },
        teacher = map["teacher"].takeUnless { it.isNullOrBlank() },
        startNode = map.getValue("startNode").toInt(),
        step = map.getValue("step").toInt(),
        day = map.getValue("day").toInt(),
        startWeek = map.getValue("startWeek").toInt(),
        endWeek = map.getValue("endWeek").toInt(),
        weekType = map.getValue("weekType").toInt(),
    )
}
